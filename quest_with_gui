<!-- STRINGS.XML
<resources>

     strings.xml is where all the values of the strings used in your views are stored.
    They are referenced in the .xml files, which are subsequently used in your code (.java files)

    <string name="app_name">TipCalculator</string>

     Main.xml Strings
    <string name="question">Question?</string>

    <string name="dog">Dogs?</string>
    <string name="baby">Babies?</string>
    <string-array name="question">
        <item>@string/dog</item>
        <item>@string/baby</item>
    </string-array>

    Main.xml Strings

    <string name="enter_bill">Enter the total bill amount: </string>

     have the students correct the string
    <string name="select_tip">Select an answer: </string>
    <string name="button_yes">yes</string>
    <string name="button_no">no</string>
    <string name="button_20">No</string>

     Result.xml Strings
    <string name="yes_amount">Times you said yes: </string>
    <string name="no_amount">Times you said no: </string>
    <string name="button_finished">Finished</string>


</resources>
-->











Some Improvements to the gui for questions.xml 
<!--
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="10dp"
    android:background="#ffffebfa">>

    - General layout of android XML are as follows:
    Every view in an android app needs to also be created in an xml file for the .java file that it appears in.

    The id is the id that is set to the views/buttons so that your code call the id as needed
    for example, in Main.java, button10 is set to: (Button) findViewById(R.id.tip10); which would give button 10 the attributes of id tip10

     The layouts align the views onto the screen as set by you. The TextView below is using relative layouts,
     it is centered on the vertical axis and has content wrapping enabled. For the buttons below, you can see that
     they are spaced relative to eachother, in this case, above the other

     If the views have text, the strings that are used are pulled from strings.xml
     For example, the text prompt below uses a string called enter_bill, whose value is
     inside strings.xml (Enter total bill amount)
     -->

    <!-- A view that prompts the user to enter a bill -->
    <!--
    <TextView
        android:id="@+id/question"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/dog"
        android:textSize="20sp"
        android:layout_alignRight="@+id/tip_prompt"
        android:layout_alignEnd="@+id/tip_prompt"
        android:layout_alignParentBottom="true" /> -->
    <!--
    <TextView
        android:id="@+id/question"
        android:text="@string/dog"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:textSize="40sp"
        android:textStyle="bold"
        android:paddingTop="100dp"
        android:layout_alignParentTop="true"
        android:layout_toLeftOf="@+id/nocount"
        android:layout_toStartOf="@+id/nocount" />

    <!-- A field for the edit text, a view that can take input from the user, placed below the textview -->
    <!--  <EditText
         android:id="@+id/editText1"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_below="@+id/text_prompt"
         android:layout_centerHorizontal="true"
         android:gravity="center"
         android:ems="10"
         android:inputType="numberDecimal" >

         <requestFocus />
     </EditText>
 -->

    <!-- Make a button for 5% tip that will be above the 10% tip button  -->

    <!-- Button for 20% tip -->
    <!-- <Button
        android:id="@+id/questions"
      android:text="@string/dog"
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:layout_alignParentTop="true"/> -->

    <!-- Button for 15% tip -->
    <!--<Button
        android:id="@+id/nocount"
        android:text="@string/button_no"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"/>

    <Button
        android:id="@+id/nocount"
        android:text="@string/button_no"
        android:shape="rectangle"
        android:radius="3dip"
        android:layout_width="140dp"
        android:layout_height="100dp"
        android:textStyle="bold"
        android:background="#ff2922ff"
        android:layout_alignParentBottom="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentEnd="true" />

  Button for 10% tip -->
   <!--
    <Button
        android:id="@+id/yescount"
        android:text="@string/button_yes"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_above="@+id/nocount"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true" />-->

<!--
    <Button
        android:id="@+id/yescount"
        android:text="@string/button_yes"
        android:shape="rectangle"
        android:radius="3dip"
        android:layout_width="140dp"
        android:layout_height="100dp"
        android:textStyle="bold"
        android:background="#ffff3b69"
        android:layout_alignParentBottom="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true" /> -->


    <!-- Text view for "select tip" on the main menu
    <TextView
        android:id="@+id/tip_prompt"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="20sp"
        android:text="@string/select_tip"
        android:layout_centerHorizontal="true"
        android:layout_above="@+id/yescount"/>

</RelativeLayout>
-->
